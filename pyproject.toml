[project]
name = "m4opt"
dynamic = ["version"]
authors = [{name = "M4OPT Developers", email = "leo.singer@ligo.org"}]
license = {text = "BSD-3-Clause"}
description = "Multi-Mission Multi-Messenger Observation Planning Toolkit"
readme = "README.rst"
requires-python = ">=3.10"
dependencies = [
    "antiprism-python",
    "astropy >= 6.1.0",
    "astropy-healpix",
    "cplex",
    "docplex",
    "dust-extinction",
    # FIXME: use dev version of dustmaps until
    # https://github.com/gregreen/dustmaps/pull/58 is merged
    "dustmaps @ git+https://github.com/gregreen/dustmaps.git",
    "gurobipy",
    "ligo.skymap >= 2.1.0",
    "numpy >= 2.1.0",
    "regions",
    "satellitetle",
    "scipy",
    "sgp4",
    "spiceypy",
    "sympy",
    "synphot",
    "tynt",
    "typer",
    "xdg-base-dirs",
]

[project.optional-dependencies]
test = [
    "astroplan",
    "hypothesis",
    "pytest-astropy",
]
docs = [
    "pysiaf",
    "sphinx-astropy[confv2]",
    "sphinxcontrib-typer",
]

[project.urls]
homepage = "https://m4opt.readthedocs.io/"
"Bug Tracker" = "https://github.com/m4opt/m4opt/issues"
"Change Log" = "https://m4opt.readthedocs.io/en/latest/changes.html"
"Documentation" = "https://m4opt.readthedocs.io/"
"GitHub" = "https://github.com/m4opt/m4opt"
"Source Code" = "https://github.com/m4opt/m4opt"

[project.scripts]
m4opt = "m4opt._cli:app"

[tool.setuptools.packages.find]

[tool.setuptools.package-data]
"*" = [
    "py.typed",
    "*.txt",
    "*.ecsv",
]

[tool.pytest.ini_options]
testpaths = [
    "m4opt",
    "docs",
]
norecursedirs = [
    "_build",
]
astropy_header = true
doctest_plus = "enabled"
text_file_format = "rst"
addopts = [
    "--doctest-rst",
    "--ignore=docs/_build",
]
doctest_optionflags = [
    "FLOAT_CMP",
    "IGNORE_EXCEPTION_DETAIL",
]

[tool.coverage.run]
omit = [
    "m4opt/_astropy_init*",
    "m4opt/*setup_package*",
    "m4opt/extern/*",
    "m4opt/_version*",
    "*/m4opt/_astropy_init*",
    "*/m4opt/*setup_package*",
    "*/m4opt/extern/*",
    "*/m4opt/_version*",
]

[tool.coverage.report]
exclude_also = [
    # Don't complain about packages we have installed
    "except ImportError",
    # Don't complain if tests don't hit assertions
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about script hooks
    "def main\\(.*\\):",
    # Ignore branches that don't pertain to this version of Python
    "pragma: py{ignore_python_version}",
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
]

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "m4opt/_version.py"

[tool.mypy]
exclude = ["^docs/"]
ignore_missing_imports = true
