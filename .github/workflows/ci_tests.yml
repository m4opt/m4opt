# GitHub Actions workflow for testing and continuous integration.
#
# This file performs testing using tox and tox.ini to define and configure the test environments.

name: CI Tests

on:
  - push
  - pull_request

jobs:
  # Github Actions supports ubuntu, windows, and macos virtual environments:
  # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
  ci_tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Code style checks
            os: ubuntu-latest
            python: 3.x
            toxenv: codestyle

          - name: Python 3.10 with minimal dependencies
            os: ubuntu-latest
            python: '3.10'
            toxenv: py310-test

          - name: Python 3.11 with all optional dependencies and coverage checking
            os: ubuntu-latest
            python: '3.11'
            toxenv: py11-test-alldeps-cov

          # - name: OS X - Python 3.10 with all optional dependencies
          #   os: macos-latest
          #   python: '3.10'
          #   toxenv: py39-test-alldeps

          # - name: Windows - Python 3.10 with all optional dependencies
          #   os: windows-latest
          #   python: '3.10'
          #   toxenv: py39-test-alldeps

          - name: Python 3.10 with oldest supported version of all dependencies
            os: ubuntu-20.04
            python: '3.10'
            toxenv: py310-test-oldestdeps

          # - name: Python 3.10 with latest dev versions of key dependencies
          #   os: ubuntu-latest
          #   python: '3.11'
          #   toxenv: py311-test-devdeps

          - name: Test building of Sphinx docs
            os: ubuntu-latest
            python: '3.10'
            toxenv: build_docs

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up python ${{ matrix.python }} on ${{ matrix.os }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox codecov

    - name: Test with tox
      env:
        CPLEX_STUDIO_KEY: ${{ secrets.CPLEX_STUDIO_KEY }}
        GRB_LICENSE_FILE_CONTENTS: ${{ secrets.GRB_LICENSE_FILE_CONTENTS }}
      run: |
        if [ -n "$GRB_LICENSE_FILE_CONTENTS" ]; then
          printenv GRB_LICENSE_FILE_CONTENTS > $HOME/gurobi.lic
        fi
        tox -e ${{ matrix.toxenv }}

    - name: Upload coverage to codecov
      if: "contains(matrix.toxenv, '-cov')"
      uses: codecov/codecov-action@v4

    # FIXME: remove this step once project is public and readthedocs is turned on
    - name: Archive documentation
      uses: actions/upload-artifact@v4
      if: ${{ matrix.toxenv == 'build_docs' }}
      with:
        name: docs
        path: |
          docs/_build/html
